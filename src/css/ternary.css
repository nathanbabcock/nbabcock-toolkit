/* true or false */
.boolean {
  --true: 1px;
  --false: 0px;
}

/* (!condition) */
.not {
  --a: 1px;
  --not-a: calc(1px - var(--a));
}

/* a || b */
.or {
  --a: 1px;
  --b: 1px;
  --a-or-b: clamp(0px, calc(var(--a) + var(--b)), 1px);
}

/* a && b */
.or {
  --a: 1px;
  --b: 1px;
  --a-and-b: round(down, calc(calc(var(--a) + var(--b)) / 2));
}

/* condition ? val1 : val2 */
.ternary {
  --condition: 1px;
  width: calc(var(--condition) * var(--val1) + calc(1px - var(--condition)) * var(--val2));
}

/* a > b ? val1 : val2 */
.greater-than {
  --a-greater-than-b: clamp(0px, round(up, calc(var(--a) - var(--b))), 1px);
  --else: calc(1px - var(--a-greater-than-b));
  width: calc(var(--a-greater-than-b) * var(--val1) + calc(var(--else) * var(--val2)));
}

/* a >= b ? val1 : val2 */
.greater-than-or-equal-to {
  --a-less-than-b: clamp(0px, round(up, calc(var(--b) - var(--a))), 1px);
  --a-gte-b: calc(1px - var(--a-less-than-b));
  width: calc(var(--a-gte-b) * var(--val1) + calc(var(--a-less-than-b) * var(--val2)));
}

/* a == b ? val1 : val2 */
.equals {
  --a-not-equals-b: clamp(0px, round(up, abs(calc(var(--a) - var(--b)))), 1px);
  --a-equals-b: calc(1px - var(--a-not-equals-b));
  width: calc(var(--a-equals-b) * var(--val1) + calc(var(--a-not-equals-b) * var(--val2)));
}
